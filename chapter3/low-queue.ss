(define (make-queue)
  (define _queue '())
  (define (dispatch m)
    (cond ((eq? m 'insert)
           (lambda (v)
             (set! _queue (append _queue (list v)))))
          ((eq? m 'delete)
           (set! _queue (cdr _queue)))
          ((eq? m 'print)
           (display _queue)(newline))
          (else (error "no such operation" m))))
  dispatch)
(define (insert-queue! q a)
  ((q 'insert) a))
(define (delete-queue! q)
  (q 'delete))
(define (print-queue q)
  (q 'print))
;;
(load "d:\\sicp\\chapter3\\queue-test-code.ss")