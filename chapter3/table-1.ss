(define (lookup key table)
  (let ((record (assoc key (cdr table))))
    (if record
        (cdr record)
        #f)))
;;
(define (assoc_ key records)
  (cond ((null? records) #f)
        ((equal? (caar records) key) (car records))
        (else (assoc key (cdr records)))))
(define (insert! key value table)
  (let ((record (assoc key (cdr table))))
    (if record
        (set-cdr! record value)
        (set-cdr! table (cons (cons key value) (cdr table)))))
  'ok)
(define (make-table) (list '*table*))
(define (test-code)
  (define t (make-table))
  (insert! 'sch 'sb t)
  (insert! 'sch 'xixi t)
  (display (lookup 'sch t))(newline)
  (display (lookup 'syq t))(newline)
  'done)
(test-code)