(define (div-terms l1 l2)
  ;(display l1)
  (if (empty-termlist? l1)
      (list (the-empty-termlist) (the-empty-termlist))
      (let ((t1 (first-term l1))
            (t2 (first-term l2)))
        (if (< (order t1) (order t2))
            (list (the-empty-termlist) l1)
            (let ((new-c (div (coeff t1) (coeff t2)))
                  (new-o (- (order t1) (order t2))))
              (let ((new-term (make-term new-o new-c)))
                ;(display new-term)
                (let ((rest-of-result
                       (div-terms (sub-terms l1 
                                            (mul-term-by-terms new-term l2))
                                  l2)))
                  (list (adjoin-term new-term (car rest-of-result))
                        (cadr rest-of-result)))))))));)
;(load "d:\\sicp\\chapter2\\sparse-poly.ss")
(load "d:\\sicp\\chapter2\\dense-poly.ss")
;(display (div-terms '((5 1) (0 -1)) '((2 1) (0 -1))))
;(define x '((5 1) (0 -1)))
;(define y '((2 1) (0 -1)))
;(display (div-terms '(1 0 0 0 0 -1) '(1 0 -1)))
;(display (first-term '(1 0 -1)))
;(first-term x)
;(order (first-term y))
(define (div-poly p1 p2)
  (if (same-variable? (variable p1) (variable p2))
      (cons (variable p1) (div-terms (term-list p1) (term-list p2)))
      (error "different var...")))
;(display (div-poly '(x 1 0 0 0 0 -1) '(x 1 0 -1)))
;(display (div-poly '(x 1 0 0 0 0 -1) '(y 1 0 -1)))