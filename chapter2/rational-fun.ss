;;rational function
;;here we assumed that the var of number-poly and denom-poly is the same
(define (make-rat-fun number-poly denom-poly)
  (list number-poly denom-poly))
(define (variable-rat-fun rat-poly) (variable (number-poly rat-poly)))
(define (number-poly rat-fun) (car rat-fun))
(define (denom-poly rat-fun) (cadr rat-fun))
(define (number-termlist rat-fun) (term-list (number-poly rat-fun)))
(define (denom-termlist rat-fun) (term-list (denom-poly rat-fun)))
(load "d:\\sicp\\chapter2\\dense-poly.ss")
(define (add-rat-fun rf1 rf2)
  ;(display rf1)
  (if (same-variable? (variable-rat-fun rf1) (variable-rat-fun rf2))
      (make-rat-fun (make-poly (variable-rat-fun rf1)
                               (add-terms-dense (mul-terms-dense (number-termlist rf1)
                                                                 (denom-termlist rf2))
                                                (mul-terms-dense (denom-termlist rf1)
                                                                 (number-termlist rf2))))
                    (make-poly (variable-rat-fun rf1)
                               (mul-terms-dense (denom-termlist rf1)
                                                (denom-termlist rf2))))
  (error "different var -- ADD-RAT-FUN" rf1 rf2)))

(define (test-code)
  (define rf1 (make-rat-fun (make-poly 'x '(1 1)) (make-poly 'x '(1 0 0 -1))))
  (define rf2 (make-rat-fun (make-poly 'x '(1 0)) (make-poly 'x '(1 0 -1))))
  (display (add-rat-fun rf1 rf2))(newline)
  ;(display (number-poly rf1))
  ;(display (variable-rat-fun rf2))
  ;(display (variable-rat-fun rf1))
  'done)
(test-code)